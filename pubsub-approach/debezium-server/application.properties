# sink type
debezium.sink.type=pubsub

# schema history configuration
# use FileSchemaHistory if you want a kafka-less solution
# also this requires a persistant volume for storing the SchemaHistory
debezium.source.schema.history.internal=io.debezium.storage.file.history.FileSchemaHistory
debezium.source.schema.history.internal.file.filename=/schemahistory/FileDatabaseHistory.dat
debezium.source.schema.history.internal.store.only.captured.tables.ddl=false

# snapshot-mode
# default : initial
# use SCHEMA_ONLY_RECOVERY only when you have lost the history file or history topic in kafka,
# this will resend all the schema changes
debezium.source.snapshot.mode=initial 

# Debezium Engine properties
debezium.source.connector.class=io.debezium.connector.mysql.MySqlConnector

# offset storage should be persistant volume to track table offset across instance lifecycles
debezium.source.offset.storage.file.filename=/tracker/offsets.dat

# Connector-specific properties
debezium.source.database.hostname=10.102.251.226
debezium.source.database.port=3306
debezium.source.database.user=mysqluser
debezium.source.database.password=mysqlpw
debezium.source.database.dbname=inventory
# database server name is the prefix for the topic where the row level change events are sent
debezium.source.database.server.name=debezium-test-db
debezium.source.database.server.id=123
debezium.source.database.include.list=inventory
debezium.source.table.include.list=inventory.customers

# Debezium Connector common configuration
# source topic prefix is the topic name where schema level change events are sent
debezium.source.topic.prefix=debezium-test-db

debezium.sink.pubsub.project.id=dev-test
